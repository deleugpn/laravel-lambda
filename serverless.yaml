AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  ApplicationKey:
    Type: String
    NoEcho: true

Globals:
  Function:
    Environment:
      Variables:
        APP_SERVICES_CACHE: /tmp/cache/services.php
        APP_PACKAGES_CACHE: /tmp/cache/packages.php
        APP_ROUTES_CACHE: /tmp/cache/routes.php
        VIEW_COMPILED_PATH: /tmp/storage/framework/views

        APP_STORAGE: /tmp
        APP_KEY: !Ref ApplicationKey
        APP_DEBUG: 'true'
        SESSION_DRIVER: array

        QUEUE_CONNECTION: sqs
        SQS_QUEUE: !ImportValue LaravelLambdaQueue
        SQS_REGION: !Ref AWS::Region

        LOG_CHANNEL: stderr

Resources:
  Application:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt LambdaExecutionRole.Arn
      CodeUri: .
      Handler: public/index.php
      Timeout: 30
      MemorySize: 512
      Runtime: provided
      Layers:
        - arn:aws:lambda:eu-west-1:209497400698:layer:php-73-fpm:6
      Events:
        HttpRoot:
          Type: Api
          Properties:
            Path: /
            Method: ANY
        HttpSubPaths:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY

  Worker:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt LambdaExecutionRole.Arn
      CodeUri: .
      Handler: artisan
      Timeout: 300
      MemorySize: 512
      Environment:
        Variables:
          ARTISAN_COMMAND: 'queue:lambda'
      Layers:
        - arn:aws:lambda:eu-west-1:209497400698:layer:php-73:6
      Runtime: provided
      Events:
        Queue:
          Type: SQS
          Properties:
            Queue: !ImportValue LaravelLambdaQueueArn
            BatchSize: 1


  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaLogPermission
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:*'
                Resource: 'arn:aws:logs:*:*:*'

        - PolicyName: LambdaQueuePermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ChangeMessageVisibility
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ReceiveMessage
                  - sqs:SendMessage
                Resource:
                  - !ImportValue LaravelLambdaQueueArn

#        - PolicyName: LambdaPermissions
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Effect: Allow
#                Action:
#                  - ec2:CreateNetworkInterface
#                  - ec2:DescribeNetworkInterfaces
#                  - ec2:DeleteNetworkInterface
#                Resource:
#                  - '*'

Outputs:
  LaravelLambdaGatewayName:
    Description: Name of the Laravel Lambda Gateway
    Value: !Ref ServerlessRestApi
    Export:
      Name: LaravelLambdaGatewayName